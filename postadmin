#!/bin/bash



###
## Functions

  ###
  ## Helpers

    show_help() {
      echo "
USAGE 
    $script_name [action] [command] [options] args...
WHERE
    action is one  of: $actions
    command is one of: $commands

For more specific help, type:
    $script_name [action] [command] --help
"
    }

    show_usage() {
      echo USAGE
      while read line; do
        echo -n '   '
        echo "$line"
      done < <(echo "$@")
      exit 1
    }

    require_var() {
      local var="$1"
      if [ -z "${!var}" ]; then
        echo -n "$var is not declared: "
        [ ! -z "$2" ] && echo "$2"
        exit 1
      fi
    }

    ask_help() {
      [[ "$1" == '--help' ]]
      return "$?"
    } 


    # Mysql queries
    mysql_query() {
      echo mysql -u"$mysql_user" -p"$mysql_passwd" -h"$mysql_host" --batch -e "USE ${mysql_database}; $@";
    }
  
    domain_id() {
      local token=%domain%
      mysql_query "${domain_id_query//$token/$1};"
    }

    email_id() {
      local token=%email%
      mysql_query "${email_id_query//$token/$1};"
    }

  ##
  ###
  
  
  
  ###
  ## Commands

    domain() {
      add() {
        if ask_help $1; then
          show_usage \
            "$script_name add domain [name] [options]
            options:
            -q    quota
            -n    number of accounts"
        fi
        echo "add"
      }
      show() {
        if ask_help $1; then
          show_usage "$script_name show domain [name]"
        fi
        domain_id dummy.tld
        echo show
      }
      delete() {
        echo "delete"
      }
      update() {
        echo "Unimplemented"
        show_help
      }
      suspend() {
        echo "Unimplemented"
        show_help
      }
      "$1" "$2"
    }

    email() {
      add() {
        echo "add"
      }
      show() {
        echo "show"
      }
      delete() {
        echo "delete"
      }
      update() {
        echo "Unimplemented"
        show_help
      }
      suspend() {
        echo "Unimplemented"
        show_help
      }
      "$1"
    }

    alias() {
      add() {
        echo "add"
      }
      show() {
        echo "show"
      }
      delete() {
        echo "delete"
      }
      update() {
        echo "Unimplemented"
        show_help
      }
      suspend() {
        echo "Unimplemented"
        show_help
      }
      "$1"
    }
    
  ##
  ###

##
###



###
## Variables
 
  declare -r script_name=$(basename $0)

  # Environment variables 
  declare -r POSTADM_CONF="${POSTADM_CONF:-/usr/local/etc/postadmin/postadmin.conf}"
  declare -r actions="add|show|delete|update|suspend"
  declare -r commands="domain|email|alias"

  # Configuration variables
  mysql_user=mailadmin
  mysql_host=127.0.0.1
  mysql_database=mailserver
  vmail_home=/var/vmail
  user_name_min_length=1
  user_name_max_length=23
  password_min_length=6
  

  # Queries
  domain_id_query="SELECT id FROM virtual_domains WHERE name = '%domain%'"
  user_id_query="SELECT id FROM virtual_users WHERE email = '%email%'"

  # sourcing configuration file
  . "$POSTADM_CONF"

  # Required variables (must be defined in $POSTADMIN_CONF or given as environment variables
  require_var 'mysql_passwd' "in $POSTADM_CONF"

##
###



###
## Parsing arguments

  # action
  if ! [[ "$1" =~ ^($actions)$ ]]; then
    echo "Unknow action $1"
    show_help
    exit 1
  fi
  declare -r action="$1"
  shift

  # command
  if ! [[ "$1" =~ ^($commands)$ ]]; then
      echo "Unknow command $1"
      show_help
      exit 1
  fi
  declare -r command="$1"
  shift

##
###



###
## Main

  "$command" "$action" $@

##
###

exit 0
